name: Test, build and release

on: push

jobs:
  version:
    runs-on: ubuntu-20.04

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - name: Generate version string
        id: version
        run: echo ::set-output name=version::$(date "+%Y-%m-%d")-$(git --no-pager log -1 --pretty=%h)

  run-tests:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Debug PHP version information
        run: |
          composer --version
          php -v
          php -i
          php -m

      - name: Validate composer files
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Lint files
        run: composer run lint

      - name: Run tests
        run: composer run test

      - name: Run static analysis
        run: composer run sa

  build-phar:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-dev -o

      - name: Build phar archive
        run: |
          mkdir -p ./bin
          php -d phar.readonly=off create-phar.php naisdevice-health-checker.php bin

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: naisdevice-health-checker
          path: bin

  release:
    if: ${{ github.ref == 'refs/heads/main' }}

    needs:
      - version
      - run-tests
      - build-phar

    runs-on: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Create release
        id: new-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.version.outputs.version }}
          release_name: Release ${{ needs.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Download naisdevice-health-checker artifact
        uses: actions/download-artifact@v2
        with:
          name: naisdevice-health-checker
          path: bin

      - name: Upload naisdevice-health-checker.phar archive
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.new-release.outputs.upload_url }}
          asset_path: ./bin/naisdevice-health-checker.phar
          asset_name: naisdevice-health-checker.phar
          asset_content_type: application/octet-stream
